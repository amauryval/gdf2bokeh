name: RunTest

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.0'

    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.2.0
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Set up cache
      uses: actions/cache@v2
      id: cached-poetry-dependencies
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: poetry install
      if: steps.cached-poetry-dev-dependencies.outputs.cache-hit != 'true'


    - name: Run tests
      shell: bash
      run: |
        source .venv/bin/activate
        python -m pytest --cov=gdf2bokeh --cov-report=xml tests/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Build the notebook index.html
      run: |
        source .venv/bin/activate
        mkdir _build
        python -m jupyter nbconvert --to html example.ipynb --ExecutePreprocessor.kernel_name=python --ExecutePreprocessor.enabled=True --output=_build/index.html

    - name: GitHub Pages action
      uses: peaceiris/actions-gh-pages@v3.6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: _build/